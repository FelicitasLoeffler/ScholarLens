<!--
 * ScholarLens - http://www.semanticsoftware.info/scholarlens
 *
 * This file is part of the ScholarLens component.
 *
 * Copyright (c) 2016, 2017, Semantic Software Lab, http://www.semanticsoftware.info,
 * Friedrich Schiller University Jena, http://fusion.cs.uni-jena.de
 *    Rene Witte
 *    Bahar Sateli
 *    Felicitas Loeffler
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 -->
<project name="Semantic Scholarly Profiles Builder" basedir="." default="run"
    xmlns:ivy="antlib:org.apache.ivy.ant">
    
    <target name="init">
        <!-- Make environment variables available -->
        <property environment="env" />
        
        <property name="lib.dir" location="../lib" />
        <property name="src.dir" location="src" />
        <property name="build.dir"      value="bin"/>
        <property name="program.name" location="ProfBuilder" />
        
        <!-- location for the generated JAR file -->
        <property name="jar.location" location="${program.name}.jar" />
        
        <path id="compile.classpath">
            <fileset dir="${lib.dir}" includes="**/*.jar" />
        </path>
    </target>
    
    <ivy:settings file="ivysettings.xml" />
    
    <!-- =================================
     target: resolve
     ================================= -->
    <target name="resolve" description="resolve and retrieve dependencies with ivy">
        <ivy:retrieve/>
    </target>
    
    <!-- Compile the source code -->
    <target name="compile" depends="init, resolve">
        <javac classpathref="compile.classpath"
            srcdir="${src.dir}"
            destdir="${build.dir}"
            debug="true"
            debuglevel="lines,source"
            includeantruntime="false">
            <compilerarg value="-Xlint"/>
        </javac>
    </target>
    
    <!-- copy resources (anything non-.java) from src to classes>
     <target name="copy.resources" depends="prepare">
     <copy todir="${classes.dir}">
     <fileset dir="${src.dir}" excludes="**/*.java" />
     </copy>
     </target-->
    
    <!-- Create the JAR file -->
    <target name="jar" depends="compile" >
        <copy todir="${build.dir}/lib">
            <fileset dir="${lib.dir}" includes="**/*.jar" />
        </copy>
        <jar destfile="${jar.location}"
        update="false"
        basedir="${build.dir}" />
    </target>
    
    <target name="clean">
        <delete file="${jar.location}" />
    </target>
    
    <target name="run" depends="jar">
        <input
            message="Please enter the absolute path of the triplestore: (Press enter to use the defaults)"
            addproperty="dataset"
            defaultvalue="/tmp/tdb" />
        
        <input
        message="Please indicate an export mode (survey or latex): (Press enter to the use defaults)"
        addproperty="mode"
        defaultvalue="survey" />

    <java classname="info.semanticsoftware.scholarlens.ProfBuilder"
            classpathref="compile.classpath">
            <arg value="${dataset}"/>
            <arg value="${mode}"/>
            <classpath>
                <pathelement location="${jar.location}"/>
            </classpath>
        </java>
    </target>
</project>
